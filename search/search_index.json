{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"","tags":["tag1","tag2"]},{"location":"#hello-my-name-is-zane","title":"Hello, my name is Zane","text":"<ul> <li>List item 1</li> <li>List item 2</li> </ul> name description Zane fun Ben silly","tags":["tag1","tag2"]},{"location":"#here-is-a-sub-heading","title":"Here is a sub heading","text":"<ol> <li>Step 1</li> <li>Step 2</li> </ol>","tags":["tag1","tag2"]},{"location":"charts/","title":"Custom Schematic","text":"Schematic Overview Overview <p>       This schematic is designed to support \u2026 (highlight functionality, power, and controller).     </p> <p> Figure ##: Showing an example schematic.       </p> Resources <p>         The schematic as a PDF download is available         here,         and the Zip folder of the project         here.       </p>"},{"location":"esp-32-table/","title":"ESP32 Table","text":"ESP Info Answer Help Model ? Include the entire part number (leave off any letters at the end that specify the package type) Product Page URL ? Found on Espressif.com ESP32-S3-WROOM-1-N4 Datasheet URL ? Do not paste links directly into the table.  Use a link ESP32 S3 Datasheet URL ? Has more detail on functions ESP32 S3 Technical Reference Manual URL ? Has details on I/O multiplexing, USB, and others Vendor link ? Digikey, Jameco, etc.  Do not paste links directly into the table.  Use a link Code Examples ? url(s) for libraries on github or other sites related to the microcontroller and your planned peripherals External Resources URL(s) ? Search on Google and YouTube for other resources for each specific microcontroller. Unit cost ? Find on Digikey, Jameco, MPJA, or octopart Absolute Maximum Current for entire IC ? Find in the microcontroller datasheet Supply Voltage Range ? Min / Nominal / Max / Absolute Max, as found in datasheet Absolute Maximum current  (for entire IC) ? as found in datasheet Maximum GPIO current  (per pin) ? as found in datasheet Supports External Interrupts? ? as found in datasheet Required Programming Hardware, Cost, URL ? as found in datasheet Module # Available Needed Associated Pins (or * for any) UART ? ? ? external SPI* ? ? ? I2C ? ? ? GPIO ? ? ? ADC ? ? ? LED PWM ? ? ? Motor PWM ? ? ? USB Programmer ? 1 ? ... <p>* The ESP32-S2 has multiple SPI interfaces, but some are for internal use</p>"},{"location":"pic-table/","title":"PIC Table","text":"ESP Info Answer Help Model ? Include the entire part number (leave off any letters at the end that specify the package type) Product Page URL ? Do not paste links directly into the table.  Use a link Datasheet URL(s) ? Do not paste links directly into the table.  Use a link Application Notes URL(s) ? Do not paste links directly into the table.  Use a link Vendor link ? Digikey, Jameco, etc.  Do not paste links directly into the table.  Use a link Code Examples ? url(s) for libraries on github or other sites related to the microcontroller and your planned peripherals External Resources URL(s) ? Search on Google and YouTube for other resources for each specific microcontroller. Unit cost ? Find in the Microchip online store, or Digikey Absolute Maximum Current for entire IC ? Find in the microcontroller datasheet Supply Voltage Range ? Min / Nominal / Max / Absolute Max, as found in datasheet Absolute Maximum current  (for entire IC) ? as found in datasheet Maximum GPIO current  (per pin) ? as found in datasheet Supports External Interrupts? ? as found in datasheet Required Programming Hardware, Cost, URL ? found on the microcontroller's product page Works with MPLabX? ? Required.  See Microchip Development Tools Works with Microchip Code Configurator? ? Can be validated in MPLabX.  Screenshot required. Module # Available Needed Associated Pins (or * for any) GPIO ? ? ? ADC ? ? ? UART ? ? ? SPI ? ? ? I2C ? ? ? PWM ? ? ? ICSP ? 1 ? ... ... ... ..."},{"location":"second-page/","title":"Power Budget","text":""},{"location":"component-selection-example/","title":"Index","text":"Component Selection \u2014 Team 206: TechMinds Component Selection \u2014 Team 206: TechMinds 5 V, 1.5 A Regulator Solution Pros Cons Option 1 \u2014 7805 Linear Regulator (TO-220)           Dropout \u2248 2 V           Simple 2-capacitor application Price: ~$1\u2013$2 (qty 1) Product page: https://www.digikey.com/en/products/filter/linear-voltage-regulators/699            \u2022 Very simple and low-noise output           \u2022 Ubiquitous; easy to source; short lead time           \u2022 Excellent line/load regulation for analog stages                     \u2022 Inefficient from 12 V \u2192 5 V (wastes (Vin\u22125V)\u00d7I as heat)           \u2022 Heatsink typically needed above ~200\u2013300 mA           \u2022 Dropout \u2248 2 V limits low-Vin operation          Option 2 \u2014 5 V Buck Module (e.g., MP1584 / LM2596)           High-efficiency step-down DC/DC Price: ~$2\u2013$6 Product page: https://www.digikey.com/en/products/filter/dc-dc-converters/882            \u2022 High efficiency \u2192 runs cool from 12 V           \u2022 Handles higher load current with margin           \u2022 Wide input range; adjustable output available                     \u2022 Switching ripple/noise requires decoupling &amp; filtering           \u2022 PCB layout/EMI are more critical           \u2022 More components; taller solution height          Option 3 \u2014 MCP1825S-5002 (5 V LDO)           1 A LDO, lower dropout than 7805 Price: ~$1\u2013$2 Product page: https://www.digikey.com/en/products/detail/microchip-technology/MCP1825S-5002E-AB/1505941            \u2022 Lower dropout than 7805           \u2022 Quieter output than a buck           \u2022 Simple BOM (input/output caps)                     \u2022 Still linear \u2192 wastes heat at higher load from 12 V           \u2022 1 A limit (below 1.5 A target)           \u2022 Thermal design required above a few hundred mA          <p>Choice: Option 2 \u2014 5 V buck module Rationale: Best thermals/efficiency from a 12 V source while delivering up to ~1.5 A.</p> Temperature Sensor (Analog Output) Solution Pros Cons Option 1 \u2014 LM35 (analog 10 mV/\u00b0C)           TO-92 or SOIC package Price: ~$1\u2013$3 TI product page: https://www.ti.com/product/LM35            \u2022 Linear 10 mV/\u00b0C scaling (\u22480\u20131 V over 0\u2013100 \u00b0C)           \u2022 Operates from 4\u201330 V; low current; minimal external parts           \u2022 Well-documented; easy firmware conversion to \u00b0C                     \u2022 Analog output susceptible to noise; needs filtering           \u2022 Long leads may require op-amp buffering           \u2022 Absolute accuracy modest without calibration          Option 2 \u2014 TMP36 (analog with offset)           2.7\u20135.5 V supply; 750 mV at 25 \u00b0C Price: ~$1\u2013$2 Analog Devices page: https://www.analog.com/en/products/tmp36.html            \u2022 Works directly from 5 V rail           \u2022 Low power; easy ADC interface           \u2022 Wide temp range (\u221240 to 125 \u00b0C)                     \u2022 Accuracy typically \u00b12 \u00b0C (worse than digital ICs)           \u2022 Output has offset that firmware must subtract           \u2022 Analog output requires decoupling/averaging          Option 3 \u2014 MCP9700 (analog)           Slope 10 mV/\u00b0C with 500 mV offset Price: &lt;$1 Microchip page: https://www.microchip.com/en-us/product/MCP9700            \u2022 Very low cost for basic sensing           \u2022 Operates at 5 V with minimal parts           \u2022 Compatible voltage levels for PIC ADC                     \u2022 Offset introduces extra math/possible error           \u2022 Accuracy \u00b12 \u00b0C typical; drift with time           \u2022 Still analog \u2192 noise/EMI sensitivity          <p>Choice: Option 1 \u2014 LM35 Rationale: Direct \u00b0C scaling keeps firmware trivial; buffer with MCP6002 if cabling is long.</p> Op-Amp (Buffer / Gain Stage at 5 V) Solution Pros Cons Option 1 \u2014 MCP6002 (dual, rail-to-rail I/O)           1.8\u20135.5 V, 1 MHz GBW Price: ~$0.50\u2013$1.50 Microchip page: https://www.microchip.com/en-us/product/MCP6002            \u2022 Rail-to-rail input and output at 5 V           \u2022 Very low quiescent current; good for low-power           \u2022 Unity-gain stable; dual channels per package                     \u2022 Limited bandwidth (1 MHz) for higher-speed signals           \u2022 Modest slew rate; limits fast steps at higher gain           \u2022 Limited output drive for heavy loads          Option 2 \u2014 TLV2462 (dual, rail-to-rail I/O)           2.7\u20136 V, 6.4 MHz GBW Price: ~$1\u2013$2 TI page: https://www.ti.com/product/TLV2462            \u2022 Higher bandwidth and slew rate vs. MCP6002           \u2022 Rail-to-rail input and output on 5 V           \u2022 Good choice if more dynamic range needed                     \u2022 Higher quiescent current than MCP6002           \u2022 More sensitive to layout at high gain (oscillation risk)           \u2022 Slightly higher cost          Option 3 \u2014 LM358 (dual, non-rail-to-rail)           3\u201332 V, classic op-amp Price: ~$0.25\u2013$0.60 TI page: https://www.ti.com/product/LM358            \u2022 Very common and low cost           \u2022 Wide supply range; tolerant of 5 V logic systems           \u2022 Available everywhere in DIP/SOIC                     \u2022 Input CM range and output swing don\u2019t reach rails at 5 V           \u2022 Lower bandwidth/slew than modern R-R devices           \u2022 Requires headroom \u2192 complicates 0\u20135 V buffering          <p>Choice: Option 1 \u2014 MCP6002 Rationale: Matches 5 V rail with rail-to-rail behavior and low power; bandwidth is adequate for slow analog conditioning.</p> Red LED Indicator (5 V MCU Pin + Resistor) Solution Pros Cons Option 1 \u2014 5 mm Red LED (THT)           Vf \u2248 2.0 V @ 20 mA Price: &lt;$0.10 Category page: https://www.digikey.com/en/products/filter/led-indication-discrete/105            \u2022 Bright and easy to see in enclosures           \u2022 Breadboard-friendly; fast to prototype           \u2022 Robust leads; easy polarity identification                     \u2022 Large footprint; not ideal for compact PCBs           \u2022 Requires drilling/holes (through-hole)           \u2022 Protrudes above PCB; more mechanical risk          Option 2 \u2014 0805 SMD Red LED           Vf \u2248 2.0 V typical Price: &lt;$0.10 Category page: https://www.digikey.com/en/products/filter/led-indication-discrete/105            \u2022 Compact footprint for tight PCBs           \u2022 Suited to automated assembly (reflow)           \u2022 Lower parasitics; easy to place near logic pins                     \u2022 Small pads can be tricky to hand-solder           \u2022 Less visible off-axis than large THT domes           \u2022 Needs silkscreen polarity marking to avoid errors          Option 3 \u2014 1206 SMD Red LED           Vf \u2248 2.0 V typical Price: &lt;$0.10 Category page: https://www.mouser.com/c/optoelectronics/leds/standard-leds-single-color/            \u2022 Bigger pads than 0805 (easier hand-soldering)           \u2022 Still compact for production PCBs           \u2022 Good visibility at modest current                     \u2022 SMD still needs current-limit resistor &amp; stencil           \u2022 Slightly larger than 0805 (board area)           \u2022 May be taller than needed for low-profile builds          <p>Choice: Option 2 \u2014 0805 SMD Red LED with 330 \u03a9 resistor Rationale: Compact, assembly-friendly, and bright enough at ~9 mA (5 V \u2192 330 \u03a9 with ~2.0 V LED Vf).</p> 12 V Motor Driver (H-Bridge / Half-Bridge) Solution Pros Cons Option 1 \u2014 DRV8871 (single channel)           6.5\u201345 V motor, logic up to 5.5 V Price: ~$3\u2013$6 TI page: https://www.ti.com/product/DRV8871            \u2022 Good current capability (to ~3.6 A peak)           \u2022 Built-in protections (OCP/OTP/UVLO)           \u2022 Simple PWM speed control with one MCU pin                     \u2022 Single channel only (can\u2019t drive 2 motors)           \u2022 Requires copper pour/thermal design for sustained current           \u2022 Slightly higher cost than barebones drivers          Option 2 \u2014 TB6612FNG (dual H-bridge)           ~1.2 A/channel, 2 channels Price: ~$5\u2013$8 SparkFun page: https://www.sparkfun.com/sparkfun-motor-driver-dual-tb6612fng-1a.html            \u2022 Drives two small DC motors or 1 motor + spare           \u2022 Simple IN1/IN2 + PWM interface per channel           \u2022 Compact breakout boards widely available                     \u2022 Lower current capability; not ideal for high-stall motors           \u2022 Less robust to sustained overload than DRV88xx series           \u2022 Needs careful thermal design at higher duty cycles          Option 3 \u2014 L298N Module (dual, bipolar)           Older bipolar driver; common teaching module Price: ~$3\u2013$6 ST page: https://www.st.com/en/motor-drivers/l298.html            \u2022 Very common/cheap modules for quick tests           \u2022 Simple logic interface (direction + enable)           \u2022 On-board diodes in many modules                     \u2022 Large voltage drop \u2192 poor efficiency &amp; heat           \u2022 Bulky; not ideal for compact or battery designs           \u2022 Outdated vs. modern MOSFET drivers          <p>Choice: Option 1 \u2014 DRV8871 Rationale: Robust single-channel solution with PWM speed control and protections built-in.</p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#mathjax","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\n  loader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\n  const svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\n  console.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"Custom Schematic","text":"Schematic Overview Overview <p>       This schematic is designed to support \u2026 (highlight functionality, power, and controller).     </p> <p> Figure ##: Showing an example schematic.       </p> Resources <p>         The schematic as a PDF download is available         here,         and the Zip folder of the project         here.       </p>"},{"location":"subfolder/another-subfile/","title":"This is a secondary sub page","text":"<p>Things to discuss</p>"}]}